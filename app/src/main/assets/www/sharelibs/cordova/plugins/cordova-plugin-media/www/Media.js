cordova.define("cordova-plugin-media.Media",function(b,d,a){var i=b("cordova/argscheck"),h=b("cordova/utils"),c=b("cordova/exec");var g={};var j=function(n,k,m,l){i.checkArgs("sFFF","Media",arguments);this.id=h.createUUID();g[this.id]=this;this.src=n;this.successCallback=k;this.errorCallback=m;this.statusCallback=l;this._duration=-1;this._position=-1;c(null,this.errorCallback,"Media","create",[this.id,this.src])};j.MEDIA_STATE=1;j.MEDIA_DURATION=2;j.MEDIA_POSITION=3;j.MEDIA_ERROR=9;j.MEDIA_NONE=0;j.MEDIA_STARTING=1;j.MEDIA_RUNNING=2;j.MEDIA_PAUSED=3;j.MEDIA_STOPPED=4;j.MEDIA_MSG=["None","Starting","Running","Paused","Stopped"];j.get=function(k){return g[k]};j.prototype.play=function(k){c(null,null,"Media","startPlayingAudio",[this.id,this.src,k])};j.prototype.stop=function(){var k=this;c(function(){k._position=0},this.errorCallback,"Media","stopPlayingAudio",[this.id])};j.prototype.seekTo=function(k){var l=this;c(function(m){l._position=m},this.errorCallback,"Media","seekToAudio",[this.id,k])};j.prototype.pause=function(){c(null,this.errorCallback,"Media","pausePlayingAudio",[this.id])};j.prototype.getDuration=function(){return this._duration};j.prototype.getCurrentPosition=function(m,k){var l=this;c(function(n){l._position=n;m(n)},k,"Media","getCurrentPositionAudio",[this.id])};j.prototype.startRecord=function(){c(null,this.errorCallback,"Media","startRecordingAudio",[this.id,this.src])};j.prototype.stopRecord=function(){c(null,this.errorCallback,"Media","stopRecordingAudio",[this.id])};j.prototype.pauseRecord=function(){c(null,this.errorCallback,"Media","pauseRecordingAudio",[this.id])};j.prototype.resumeRecord=function(){c(null,this.errorCallback,"Media","resumeRecordingAudio",[this.id])};j.prototype.release=function(){c(null,this.errorCallback,"Media","release",[this.id])};j.prototype.setVolume=function(k){c(null,null,"Media","setVolume",[this.id,k])};j.prototype.setRate=function(k){if(cordova.platformId==="ios"){c(null,null,"Media","setRate",[this.id,k])}else{console.warn("media.setRate method is currently not supported for",cordova.platformId,"platform.")}};j.prototype.getCurrentAmplitude=function(l,k){c(function(m){l(m)},k,"Media","getCurrentAmplitudeAudio",[this.id])};j.onStatus=function(n,k,l){var m=g[n];if(m){switch(k){case j.MEDIA_STATE:if(m.statusCallback){m.statusCallback(l)}if(l==j.MEDIA_STOPPED){if(m.successCallback){m.successCallback()}}break;case j.MEDIA_DURATION:m._duration=l;break;case j.MEDIA_ERROR:if(m.errorCallback){m.errorCallback(l)}break;case j.MEDIA_POSITION:m._position=Number(l);break;default:if(console.error){console.error("Unhandled Media.onStatus :: "+k)}break}}else{if(console.error){console.error("Received Media.onStatus callback for unknown media :: "+n)}}};a.exports=j;function e(k){if(k.action=="status"){j.onStatus(k.status.id,k.status.msgType,k.status.value)}else{throw new Error("Unknown media action"+k.action)}}if(cordova.platformId==="android"||cordova.platformId==="amazon-fireos"||cordova.platformId==="windowsphone"){var f=b("cordova/channel");f.createSticky("onMediaPluginReady");f.waitForInitialization("onMediaPluginReady");f.onCordovaReady.subscribe(function(){c(e,undefined,"Media","messageChannel",[]);f.initializationComplete("onMediaPluginReady")})}});